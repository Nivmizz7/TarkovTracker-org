name: Frontend Tests

on:
  push:
    branches: [ master, develop ]
    paths: [ 'frontend/**' ]
  pull_request:
    branches: [ master, develop ]
    paths: [ 'frontend/**' ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run unit tests
      working-directory: ./frontend
      run: npm run test:run
      
    - name: Run type checking
      working-directory: ./frontend
      run: npm run type-check
      
    - name: Run linting
      working-directory: ./frontend
      run: npm run lint

  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
      
    - name: Build project
      working-directory: ./frontend
      run: npm run build
      
    - name: Run E2E tests
      working-directory: ./frontend
      run: npm run test:e2e
      env:
        CI: true
        
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

  build-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build for development
      working-directory: ./frontend
      run: npm run build:dev
      
    - name: Build for production
      working-directory: ./frontend
      run: npm run build:prod
      
    - name: Check build artifacts
      working-directory: ./frontend
      run: |
        ls -la dist/
        # Ensure critical assets exist
        test -f dist/index.html
        test -d dist/assets/